{
  "contractName": "BaseController",
  "abi": [
    {
      "inputs": [],
      "name": "ownerAddr",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_managerAddr",
          "type": "address"
        }
      ],
      "name": "setManagerAddr",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ownerAddr\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_managerAddr\",\"type\":\"address\"}],\"name\":\"setManagerAddr\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/helpers/BaseController.sol\":\"BaseController\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/helpers/BaseController.sol\":{\"keccak256\":\"0x7a70b2a49d8b0e40a0ffa0c28504d3be824af61a585ae5e583079ccf084fb145\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc65ef93210fa8e5d6f0c75d1e6578b959b721d824bbd2e1c03e0d88113c848e\",\"dweb:/ipfs/QmXyQGvpFeB2dkwWqpQKZgjkbfyLZUhV4TWCQFdGpZU4To\"]},\"project:/contracts/helpers/Owned.sol\":{\"keccak256\":\"0xca3127bcb993674894480b07378d965fcbcbc74ee53f24927b9c8938fd2952d2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6e0af3e2b124c45291cd017412ad7053cfae33af5e0bfba2f172c2d1475cda9\",\"dweb:/ipfs/QmcRAwhiFS2ys94u1HBpzBVr7xZinC64kFd4eKQwAUa2zq\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610321806100606000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80637978b231146100465780639c675eaa14610062578063f2fde38b14610080575b600080fd5b610060600480360381019061005b9190610246565b61009c565b005b61006a610138565b6040516100779190610282565b60405180910390f35b61009a60048036038101906100959190610246565b61015c565b005b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146100f457600080fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146101b457600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156101ee57600080fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600081359050610240816102d4565b92915050565b60006020828403121561025c5761025b6102cf565b5b600061026a84828501610231565b91505092915050565b61027c8161029d565b82525050565b60006020820190506102976000830184610273565b92915050565b60006102a8826102af565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600080fd5b6102dd8161029d565b81146102e857600080fd5b5056fea2646970667358221220cbb734ab70b3ec360edede7f713e5dbffcf422b4afbed21f6f4f911635cae64c64736f6c63430008070033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100415760003560e01c80637978b231146100465780639c675eaa14610062578063f2fde38b14610080575b600080fd5b610060600480360381019061005b9190610246565b61009c565b005b61006a610138565b6040516100779190610282565b60405180910390f35b61009a60048036038101906100959190610246565b61015c565b005b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146100f457600080fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146101b457600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156101ee57600080fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600081359050610240816102d4565b92915050565b60006020828403121561025c5761025b6102cf565b5b600061026a84828501610231565b91505092915050565b61027c8161029d565b82525050565b60006020820190506102976000830184610273565b92915050565b60006102a8826102af565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600080fd5b6102dd8161029d565b81146102e857600080fd5b5056fea2646970667358221220cbb734ab70b3ec360edede7f713e5dbffcf422b4afbed21f6f4f911635cae64c64736f6c63430008070033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:1525:8",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "59:87:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "69:29:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "91:6:8"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "78:12:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "78:20:8"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "69:5:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "134:5:8"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "107:26:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "107:33:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "107:33:8"
                }
              ]
            },
            "name": "abi_decode_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "37:6:8",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "45:3:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "53:5:8",
                "type": ""
              }
            ],
            "src": "7:139:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "218:263:8",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "264:83:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "266:77:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "266:79:8"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "266:79:8"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "239:7:8"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "248:9:8"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "235:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "235:23:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "260:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "231:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "231:32:8"
                  },
                  "nodeType": "YulIf",
                  "src": "228:119:8"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "357:117:8",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "372:15:8",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "386:1:8",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "376:6:8",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "401:63:8",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "436:9:8"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "447:6:8"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "432:3:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "432:22:8"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "456:7:8"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "411:20:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "411:53:8"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "401:6:8"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "188:9:8",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "199:7:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "211:6:8",
                "type": ""
              }
            ],
            "src": "152:329:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "552:53:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "569:3:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "592:5:8"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "574:17:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "574:24:8"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "562:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "562:37:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "562:37:8"
                }
              ]
            },
            "name": "abi_encode_t_address_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "540:5:8",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "547:3:8",
                "type": ""
              }
            ],
            "src": "487:118:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "709:124:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "719:26:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "731:9:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "742:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "727:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "727:18:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "719:4:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "799:6:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "812:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "823:1:8",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "808:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "808:17:8"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "755:43:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "755:71:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "755:71:8"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "681:9:8",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "693:6:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "704:4:8",
                "type": ""
              }
            ],
            "src": "611:222:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "879:35:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "889:19:8",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "905:2:8",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "899:5:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "899:9:8"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "889:6:8"
                    }
                  ]
                }
              ]
            },
            "name": "allocate_unbounded",
            "nodeType": "YulFunctionDefinition",
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "872:6:8",
                "type": ""
              }
            ],
            "src": "839:75:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "965:51:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "975:35:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1004:5:8"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "986:17:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "986:24:8"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "975:7:8"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "947:5:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "957:7:8",
                "type": ""
              }
            ],
            "src": "920:96:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1067:81:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1077:65:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1092:5:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1099:42:8",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "1088:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1088:54:8"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1077:7:8"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1049:5:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1059:7:8",
                "type": ""
              }
            ],
            "src": "1022:126:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1243:28:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1260:1:8",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1263:1:8",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "1253:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1253:12:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1253:12:8"
                }
              ]
            },
            "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
            "nodeType": "YulFunctionDefinition",
            "src": "1154:117:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1366:28:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1383:1:8",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1386:1:8",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "1376:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1376:12:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1376:12:8"
                }
              ]
            },
            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
            "nodeType": "YulFunctionDefinition",
            "src": "1277:117:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1443:79:8",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1500:16:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1509:1:8",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1512:1:8",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1502:6:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1502:12:8"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1502:12:8"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1466:5:8"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "1491:5:8"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "1473:17:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1473:24:8"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "1463:2:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1463:35:8"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1456:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1456:43:8"
                  },
                  "nodeType": "YulIf",
                  "src": "1453:63:8"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1436:5:8",
                "type": ""
              }
            ],
            "src": "1400:122:8"
          }
        ]
      },
      "contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n}\n",
      "id": 8,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "90:218:1:-:0;;;;;;;;;;;;;154:10:3;142:9;;:22;;;;;;;;;;;;;;;;;;90:218:1;;;;;;",
  "deployedSourceMap": "90:218:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;200:106;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;88:24:3;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;264:190;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;200:106:1;230:9:3;;;;;;;;;;216:23;;:10;:23;;;208:32;;;;;;287:12:1::1;273:11;;:26;;;;;;;;;;;;;;;;;;200:106:::0;:::o;88:24:3:-;;;;;;;;;;;;:::o;264:190::-;230:9;;;;;;;;;;216:23;;:10;:23;;;208:32;;;;;;412:1:::1;391:23;;:9;:23;;;;383:32;;;::::0;::::1;;438:9;426;::::0;:21:::1;;;;;;;;;;;;;;;;;;264:190:::0;:::o;7:139:8:-;53:5;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;7:139;;;;:::o;152:329::-;211:6;260:2;248:9;239:7;235:23;231:32;228:119;;;266:79;;:::i;:::-;228:119;386:1;411:53;456:7;447:6;436:9;432:22;411:53;:::i;:::-;401:63;;357:117;152:329;;;;:::o;487:118::-;574:24;592:5;574:24;:::i;:::-;569:3;562:37;487:118;;:::o;611:222::-;704:4;742:2;731:9;727:18;719:26;;755:71;823:1;812:9;808:17;799:6;755:71;:::i;:::-;611:222;;;;:::o;920:96::-;957:7;986:24;1004:5;986:24;:::i;:::-;975:35;;920:96;;;:::o;1022:126::-;1059:7;1099:42;1092:5;1088:54;1077:65;;1022:126;;;:::o;1277:117::-;1386:1;1383;1376:12;1400:122;1473:24;1491:5;1473:24;:::i;:::-;1466:5;1463:35;1453:63;;1512:1;1509;1502:12;1453:63;1400:122;:::o",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.5.10 <0.9.0;\n\nimport './Owned.sol';\n\ncontract BaseController is Owned {\n    // This is the contract managers address\n    address managerAddr;\n\n    function setManagerAddr(address _managerAddr) public onlyOwner {\n        managerAddr = _managerAddr;\n    }\n}",
  "sourcePath": "/Users/chris/Desktop/development/tweether/contracts/helpers/BaseController.sol",
  "ast": {
    "absolutePath": "project:/contracts/helpers/BaseController.sol",
    "exportedSymbols": {
      "BaseController": [
        70
      ],
      "Owned": [
        147
      ]
    },
    "id": 71,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 52,
        "literals": [
          "solidity",
          ">=",
          "0.5",
          ".10",
          "<",
          "0.9",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:32:1"
      },
      {
        "absolutePath": "project:/contracts/helpers/Owned.sol",
        "file": "./Owned.sol",
        "id": 53,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 71,
        "sourceUnit": 148,
        "src": "67:21:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 54,
              "name": "Owned",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 147,
              "src": "117:5:1"
            },
            "id": 55,
            "nodeType": "InheritanceSpecifier",
            "src": "117:5:1"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 70,
        "linearizedBaseContracts": [
          70,
          147
        ],
        "name": "BaseController",
        "nameLocation": "99:14:1",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 57,
            "mutability": "mutable",
            "name": "managerAddr",
            "nameLocation": "182:11:1",
            "nodeType": "VariableDeclaration",
            "scope": 70,
            "src": "174:19:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 56,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "174:7:1",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 68,
              "nodeType": "Block",
              "src": "263:43:1",
              "statements": [
                {
                  "expression": {
                    "id": 66,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 64,
                      "name": "managerAddr",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 57,
                      "src": "273:11:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 65,
                      "name": "_managerAddr",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 59,
                      "src": "287:12:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "273:26:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 67,
                  "nodeType": "ExpressionStatement",
                  "src": "273:26:1"
                }
              ]
            },
            "functionSelector": "7978b231",
            "id": 69,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 62,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 61,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 125,
                  "src": "253:9:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "253:9:1"
              }
            ],
            "name": "setManagerAddr",
            "nameLocation": "209:14:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 60,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 59,
                  "mutability": "mutable",
                  "name": "_managerAddr",
                  "nameLocation": "232:12:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 69,
                  "src": "224:20:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 58,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "224:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "223:22:1"
            },
            "returnParameters": {
              "id": 63,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "263:0:1"
            },
            "scope": 70,
            "src": "200:106:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 71,
        "src": "90:218:1",
        "usedErrors": []
      }
    ],
    "src": "33:275:1"
  },
  "legacyAST": {
    "absolutePath": "project:/contracts/helpers/BaseController.sol",
    "exportedSymbols": {
      "BaseController": [
        70
      ],
      "Owned": [
        147
      ]
    },
    "id": 71,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 52,
        "literals": [
          "solidity",
          ">=",
          "0.5",
          ".10",
          "<",
          "0.9",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:32:1"
      },
      {
        "absolutePath": "project:/contracts/helpers/Owned.sol",
        "file": "./Owned.sol",
        "id": 53,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 71,
        "sourceUnit": 148,
        "src": "67:21:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 54,
              "name": "Owned",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 147,
              "src": "117:5:1"
            },
            "id": 55,
            "nodeType": "InheritanceSpecifier",
            "src": "117:5:1"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 70,
        "linearizedBaseContracts": [
          70,
          147
        ],
        "name": "BaseController",
        "nameLocation": "99:14:1",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 57,
            "mutability": "mutable",
            "name": "managerAddr",
            "nameLocation": "182:11:1",
            "nodeType": "VariableDeclaration",
            "scope": 70,
            "src": "174:19:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 56,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "174:7:1",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 68,
              "nodeType": "Block",
              "src": "263:43:1",
              "statements": [
                {
                  "expression": {
                    "id": 66,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 64,
                      "name": "managerAddr",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 57,
                      "src": "273:11:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 65,
                      "name": "_managerAddr",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 59,
                      "src": "287:12:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "273:26:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 67,
                  "nodeType": "ExpressionStatement",
                  "src": "273:26:1"
                }
              ]
            },
            "functionSelector": "7978b231",
            "id": 69,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 62,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 61,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 125,
                  "src": "253:9:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "253:9:1"
              }
            ],
            "name": "setManagerAddr",
            "nameLocation": "209:14:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 60,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 59,
                  "mutability": "mutable",
                  "name": "_managerAddr",
                  "nameLocation": "232:12:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 69,
                  "src": "224:20:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 58,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "224:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "223:22:1"
            },
            "returnParameters": {
              "id": 63,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "263:0:1"
            },
            "scope": 70,
            "src": "200:106:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 71,
        "src": "90:218:1",
        "usedErrors": []
      }
    ],
    "src": "33:275:1"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.7+commit.e28d00a7.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.3",
  "updatedAt": "2021-09-18T02:45:56.116Z",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}